// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BangazonBE.Migrations
{
    [DbContext(typeof(BangazonDbContext))]
    partial class BangazonDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Bangazon.Models.Customer", b =>
                {
                    b.Property<string>("UserUid")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("CustomerUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<int>("Zip")
                        .HasColumnType("integer");

                    b.HasKey("UserUid");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            UserUid = "1",
                            Address = "123 Main st",
                            City = "Midland",
                            CustomerUserName = "TestCust1",
                            Email = "brook@email.com",
                            FirstName = "Test1",
                            ImageUrl = "https://img.freepik.com/free-vector/cute-rat-face-with-smiley-face_1308-146750.jpg?t=st=1741049605~exp=1741053205~hmac=995443f80f9f469eb7671d40911a8551d91981b3c05e96bbefcc26ab1c0d56d0&w=740",
                            LastName = "Brook",
                            State = "NC",
                            Zip = 20451
                        },
                        new
                        {
                            UserUid = "2",
                            Address = "671 Main St",
                            City = "Greenville",
                            CustomerUserName = "TestCust2",
                            Email = "bee@email.com",
                            FirstName = "Test2",
                            ImageUrl = "https://img.freepik.com/free-vector/cute-mouse-cartoon-character_1308-140064.jpg?t=st=1741049847~exp=1741053447~hmac=164e23b0d9c44047635d3b19a774d338cbe09db323b73f287e0cfb70de7f0570&w=74",
                            LastName = "Bee",
                            State = "NC",
                            Zip = 45643
                        });
                });

            modelBuilder.Entity("Bangazon.Models.CustomerPaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerUserUid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CustomerUserUid");

                    b.ToTable("CustomerPaymentMethods");

                    b.HasData(
                        new
                        {
                            Id = 601,
                            CustomerUserUid = "1",
                            Details = "applepay_user_1234",
                            PaymentMethod = "ApplePay"
                        },
                        new
                        {
                            Id = 602,
                            CustomerUserUid = "2",
                            Details = "googlepay_user_5678",
                            PaymentMethod = "GooglePay"
                        },
                        new
                        {
                            Id = 603,
                            CustomerUserUid = "1",
                            Details = "paypal_user_test@example.com",
                            PaymentMethod = "PayPal"
                        },
                        new
                        {
                            Id = 604,
                            CustomerUserUid = "2",
                            Details = "4111-XXXX-XXXX-1234",
                            PaymentMethod = "CreditCard"
                        });
                });

            modelBuilder.Entity("Bangazon.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerPaymentMethodId")
                        .HasColumnType("integer");

                    b.Property<string>("CustomerUserUid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DateShipped")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Filled")
                        .HasColumnType("boolean");

                    b.Property<bool>("Open")
                        .HasColumnType("boolean");

                    b.Property<decimal>("OrderTotal")
                        .HasColumnType("numeric");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductTotal")
                        .HasColumnType("integer");

                    b.Property<string>("SellerUserUid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Shipped")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("CustomerPaymentMethodId");

                    b.HasIndex("CustomerUserUid");

                    b.HasIndex("ProductId");

                    b.HasIndex("SellerUserUid");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 401,
                            CustomerPaymentMethodId = 601,
                            CustomerUserUid = "1",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(36),
                            Filled = false,
                            Open = true,
                            OrderTotal = 5m,
                            ProductId = 201,
                            ProductTotal = 1,
                            SellerUserUid = "21",
                            Shipped = false
                        },
                        new
                        {
                            Id = 402,
                            CustomerPaymentMethodId = 602,
                            CustomerUserUid = "2",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(40),
                            DateShipped = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(337),
                            Filled = true,
                            Open = false,
                            OrderTotal = 10m,
                            ProductId = 202,
                            ProductTotal = 2,
                            SellerUserUid = "22",
                            Shipped = true
                        });
                });

            modelBuilder.Entity("Bangazon.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("SellerUserUid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SellerUserUid");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 201,
                            Description = "Your cat will love this",
                            ImageUrl = "https://pixabay.com/photos/cat-toy-to-play-domestic-cat-4994140/",
                            Name = "Cat Toy",
                            Price = 5m,
                            Quantity = 5,
                            SellerUserUid = "21"
                        },
                        new
                        {
                            Id = 202,
                            Description = "Yummy",
                            ImageUrl = "https://cdn.pixabay.com/photo/2014/05/21/18/08/dog-bones-350092_640.jpg",
                            Name = "Dog Treats",
                            Price = 8m,
                            Quantity = 1,
                            SellerUserUid = "22"
                        });
                });

            modelBuilder.Entity("Bangazon.Models.Seller", b =>
                {
                    b.Property<string>("UserUid")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<bool>("ProductsSold")
                        .HasColumnType("boolean");

                    b.Property<string>("SellerUserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StateOrCountry")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserUid");

                    b.ToTable("Sellers");

                    b.HasData(
                        new
                        {
                            UserUid = "21",
                            City = "Cleveland",
                            Email = "cats@mail.com",
                            ImageUrl = "https://cdn.pixabay.com/photo/2021/11/22/04/28/animal-6815808_1280.jpg",
                            ProductsSold = true,
                            SellerUserName = "Cats R Us",
                            StateOrCountry = "OH"
                        },
                        new
                        {
                            UserUid = "22",
                            City = "London",
                            Email = "Petsfood@mail.com",
                            ImageUrl = "https://cdn.pixabay.com/photo/2014/05/21/18/08/dog-bones-350092_640.jpg",
                            ProductsSold = true,
                            SellerUserName = "All Pets Food",
                            StateOrCountry = "England"
                        },
                        new
                        {
                            UserUid = "23",
                            City = "Austin",
                            Email = "birds@mail.com",
                            ImageUrl = "https://cdn.pixabay.com/photo/2020/01/03/22/14/birdhouse-4739277_640.jpg",
                            ProductsSold = false,
                            SellerUserName = "The Bird Store",
                            StateOrCountry = "TX"
                        });
                });

            modelBuilder.Entity("Bangazon.Models.CustomerPaymentMethod", b =>
                {
                    b.HasOne("Bangazon.Models.Customer", "Customer")
                        .WithMany("PaymentMethods")
                        .HasForeignKey("CustomerUserUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Bangazon.Models.Order", b =>
                {
                    b.HasOne("Bangazon.Models.CustomerPaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("CustomerPaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bangazon.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerUserUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bangazon.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bangazon.Models.Seller", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerUserUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("PaymentMethod");

                    b.Navigation("Product");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("Bangazon.Models.Product", b =>
                {
                    b.HasOne("Bangazon.Models.Seller", null)
                        .WithMany("Products")
                        .HasForeignKey("SellerUserUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bangazon.Models.Customer", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("PaymentMethods");
                });

            modelBuilder.Entity("Bangazon.Models.Seller", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
